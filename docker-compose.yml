services:
    rabbitmq:
      image: rabbitmq:3-management
      container_name: rabbitmq
      ports:
        - "5672:5672"
        - "15672:15672"
      environment:
        RABBITMQ_DEFAULT_USER: guest
        RABBITMQ_DEFAULT_PASS: guest
      volumes:
        - rabbitmq-data:/var/lib/rabbitmq
      healthcheck:
        test: ["CMD", "rabbitmqctl", "status"]
        interval: 10s
        timeout: 5s
        retries: 5
      networks:
          - app-network

    catalogdb:
        image: mongo:latest
        container_name: catalogdb
        ports:
            - "27018:27017"
        volumes:
            - ./data/db:/data/db
        healthcheck:
          test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
          interval: 10s
          timeout: 3s
          retries: 5
        networks:
            - app-network
    
    orderdb:
      image: mysql:8.0.41
      container_name: orderdb
      restart: always
      environment:
        MYSQL_ROOT_PASSWORD: root
        MYSQL_DATABASE: orderdb
        MYSQL_USER: admin
        MYSQL_PASSWORD: admin
      ports:
        - "3307:3306"
      healthcheck:
        test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uadmin", "-padmin"]
        interval: 10s
        retries: 5
        start_period: 20s
      volumes:
        - mysql-data:/var/lib/mysql
      networks:
        - app-network

    catalogapi:
        image: catalogapi
        container_name: catalogapi
        build:
          context: ./Services/src
          dockerfile: ./Catalog.Api/Dockerfile
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
            - ASPNETCORE_HTTP_PORTS=8080
            - ASPNETCORE_HTTPS_PORTS=8081
            - ASPNETCORE_Kestrel__Certificates__Default__Password=MyPassword123
            - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
            - ConnectionStrings__CatalogDbConnection=mongodb://catalogdb:27017
            - RabbitMqConfiguration__HostName=rabbitmq
        ports:
            - "3000:8080"
            - "3030:8081"
        volumes:
            - ./Services/aspnetapp.pfx:/https/aspnetapp.pfx:ro
        depends_on:
          catalogdb:
            condition: service_healthy
          rabbitmq:
            condition: service_healthy
        networks:
            - app-network

    orderapi:
        image: orderapi
        container_name: orderapi
        build:
          context: ./Services/src
          dockerfile: ./Order.Api/Dockerfile
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
            - ASPNETCORE_HTTP_PORTS=8080
            - ASPNETCORE_HTTPS_PORTS=8081
            - ASPNETCORE_Kestrel__Certificates__Default__Password=MyPassword123
            - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
            - ConnectionStrings__OrderDbConnection=Server=orderdb;Database=orderdb;Uid=admin;Pwd=admin;SslMode=None;
            - RabbitMqConfiguration__HostName=rabbitmq
        ports:
            - "3001:8080"
            - "3031:8081"
        volumes:
            - ./Services/aspnetapp.pfx:/https/aspnetapp.pfx:ro
        depends_on:
          orderdb:
            condition: service_healthy
          rabbitmq:
            condition: service_healthy
        networks:
            - app-network

networks:
  app-network:
    driver: bridge

volumes:
  rabbitmq-data:
  mysql-data:
    driver: local